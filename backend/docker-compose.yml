# =============================================================================
# HireWise Backend - Docker Compose Configuration (Development)
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # PostgreSQL Database
  # =============================================================================
  db:
    image: postgres:15-alpine
    container_name: hirewise_db
    environment:
      POSTGRES_DB: hirewise_db
      POSTGRES_USER: hirewise_user
      POSTGRES_PASSWORD: hirewise_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hirewise_user -d hirewise_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hirewise_network

  # =============================================================================
  # Redis Cache and Message Broker
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: hirewise_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hirewise_network

  # =============================================================================
  # Django Web Application
  # =============================================================================
  web:
    build:
      context: .
      target: development
    container_name: hirewise_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=hirewise_db
      - DB_USER=hirewise_user
      - DB_PASSWORD=hirewise_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hirewise_network

  # =============================================================================
  # Celery Worker
  # =============================================================================
  celery:
    build:
      context: .
      target: development
    container_name: hirewise_celery
    command: celery -A hirewise worker --loglevel=info --concurrency=2
    volumes:
      - .:/app
      - media_files:/app/media
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=hirewise_db
      - DB_USER=hirewise_user
      - DB_PASSWORD=hirewise_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - db
      - redis
      - web
    healthcheck:
      test: ["CMD", "celery", "-A", "hirewise", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hirewise_network

  # =============================================================================
  # Celery Beat (Scheduler)
  # =============================================================================
  celery-beat:
    build:
      context: .
      target: development
    container_name: hirewise_celery_beat
    command: celery -A hirewise beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=hirewise_db
      - DB_USER=hirewise_user
      - DB_PASSWORD=hirewise_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - db
      - redis
      - web
    networks:
      - hirewise_network

  # =============================================================================
  # Nginx Reverse Proxy (Optional for development)
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: hirewise_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - static_files:/var/www/static
      - media_files:/var/www/media
    depends_on:
      - web
    networks:
      - hirewise_network

# =============================================================================
# Volumes
# =============================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  media_files:
    driver: local
  static_files:
    driver: local

# =============================================================================
# Networks
# =============================================================================
networks:
  hirewise_network:
    driver: bridge